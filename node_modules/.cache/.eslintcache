[{"C:\\Users\\Sagar\\Desktop\\Sensor\\my-app\\src\\index.js":"1","C:\\Users\\Sagar\\Desktop\\Sensor\\my-app\\src\\App.js":"2","C:\\Users\\Sagar\\Desktop\\Sensor\\my-app\\src\\reportWebVitals.js":"3","C:\\Users\\Sagar\\Desktop\\Sensor\\my-app\\src\\components\\home.js":"4","C:\\Users\\Sagar\\Desktop\\Sensor\\my-app\\src\\components\\result.js":"5","C:\\Users\\Sagar\\Desktop\\Sensor\\my-app\\src\\components\\dropdownMenu.js":"6","C:\\Users\\Sagar\\Desktop\\Sensor\\my-app\\src\\components\\webcam.js":"7","C:\\Users\\Sagar\\Desktop\\Sensor\\my-app\\src\\components\\addnew.js":"8"},{"size":584,"mtime":1699677435587,"results":"9","hashOfConfig":"10"},{"size":603,"mtime":1699708965507,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1698905253950,"results":"12","hashOfConfig":"10"},{"size":1591,"mtime":1699709335035,"results":"13","hashOfConfig":"10"},{"size":704,"mtime":1699116196027,"results":"14","hashOfConfig":"10"},{"size":2378,"mtime":1699680822277,"results":"15","hashOfConfig":"10"},{"size":1013,"mtime":1699433396755,"results":"16","hashOfConfig":"10"},{"size":1818,"mtime":1699709305509,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"5tk9zm",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},"C:\\Users\\Sagar\\Desktop\\Sensor\\my-app\\src\\index.js",[],[],["45"],"C:\\Users\\Sagar\\Desktop\\Sensor\\my-app\\src\\App.js",[],[],"C:\\Users\\Sagar\\Desktop\\Sensor\\my-app\\src\\reportWebVitals.js",[],[],"C:\\Users\\Sagar\\Desktop\\Sensor\\my-app\\src\\components\\home.js",["46","47"],[],"import React, { useState, useEffect} from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport DropdownMenu from \"./dropdownMenu\";\r\n\r\nconst Home = () => {\r\n  const [options, setOptions] = useState([]);\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n  const fetchURL = `${process.env.REACT_APP_BACKEND_API}/getImages`;\r\n\r\n  useEffect(() => {\r\n    const fetchOptions = async () => {\r\n      try {\r\n        const response = await fetch(fetchURL);\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setOptions(data);\r\n        } else {\r\n          console.error(\"Failed to fetch options:\", response.statusText);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching options:\", error);\r\n      }\r\n    };\r\n\r\n    fetchOptions();\r\n  }, []);\r\n\r\n  const handleSelect = (option) => {\r\n    setSelectedOption(option);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    // Perform action with the selected option\r\n    console.log(\"Submitted:\", selectedOption);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Select Design:</h1>\r\n      <DropdownMenu options={options} onSelect={handleSelect} />\r\n      {selectedOption && (\r\n        <div>\r\n          <p>Selected Option: {selectedOption.name}</p>\r\n          <img src={selectedOption.image} alt={selectedOption.label} />\r\n          <button onClick={handleSubmit}>Compare</button>\r\n        </div>\r\n      )}\r\n      <p>\r\n        <a href=\"#\">\r\n          <NavLink to=\"/addnew\">Addnew</NavLink>\r\n        </a>\r\n        to add a new design.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\Sagar\\Desktop\\Sensor\\my-app\\src\\components\\result.js",[],[],"C:\\Users\\Sagar\\Desktop\\Sensor\\my-app\\src\\components\\dropdownMenu.js",[],[],"C:\\Users\\Sagar\\Desktop\\Sensor\\my-app\\src\\components\\webcam.js",[],[],"C:\\Users\\Sagar\\Desktop\\Sensor\\my-app\\src\\components\\addnew.js",["48"],[],"import { useCallback, useRef, useState, React } from \"react\";\r\nimport Webcam from \"react-webcam\";\r\n\r\nconst Addnew = () => { \r\n  const webcamRef = useRef(null);\r\n  const [imgSrc, setImgSrc] = useState(null);\r\n  const [name, setName] = useState(\"\");\r\n  const uploadURL = `${process.env.REACT_APP_BACKEND_API}/upload`;\r\n\r\n  const capture = useCallback(async () => {\r\n    const imageSrc = webcamRef.current.getScreenshot();\r\n    setImgSrc(imageSrc);\r\n    try {\r\n      const response = await fetch(uploadURL, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ name: name, image: imageSrc }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        console.log(\"Data uploaded successfully\");\r\n        // setImgSrc(imageSrc);\r\n      } else {\r\n        console.error(\"Failed to upload data\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error uploading data\", error);\r\n    }\r\n  }, [webcamRef, name]);\r\n\r\n  const retake = () => {\r\n    setImgSrc(null);\r\n    setName(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {imgSrc ? (\r\n        <div>\r\n          <img src={imgSrc} alt=\"webcam\" />\r\n          <p>Name: {name}</p>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <Webcam height={600} width={600} ref={webcamRef} screenshotFormat=\"image/jpeg\"/>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter Name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </div>\r\n      )}\r\n      <div className=\"btn-container\">\r\n        {imgSrc ? (\r\n          <button onClick={retake}>Retake photo</button>\r\n        ) : (\r\n          <button onClick={capture}>Capture photo</button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Addnew;\r\n",{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":26,"column":6,"nodeType":"53","endLine":26,"endColumn":8,"suggestions":"54"},{"ruleId":"55","severity":1,"message":"56","line":49,"column":9,"nodeType":"57","endLine":49,"endColumn":21},{"ruleId":"51","severity":1,"message":"58","line":31,"column":6,"nodeType":"53","endLine":31,"endColumn":23,"suggestions":"59"},"no-new-object",["60"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchURL'. Either include it or remove the dependency array.","ArrayExpression",["61"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useCallback has a missing dependency: 'uploadURL'. Either include it or remove the dependency array.",["62"],"no-object-constructor",{"desc":"63","fix":"64"},{"desc":"65","fix":"66"},"Update the dependencies array to be: [fetchURL]",{"range":"67","text":"68"},"Update the dependencies array to be: [uploadURL, name]",{"range":"69","text":"70"},[806,808],"[fetchURL]",[961,978],"[uploadURL, name]"]