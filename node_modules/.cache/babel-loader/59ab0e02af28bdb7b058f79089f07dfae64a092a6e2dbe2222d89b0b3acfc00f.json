{"ast":null,"code":"var parse = require('./parse');\nvar extendNoOverwrite = function (obj, defaults) {\n  for (key in defaults) {\n    if (obj[key] === undefined) {\n      obj[key] = defaults[key];\n    }\n  }\n};\nvar optionalArgs = function (options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n  // provide default callback function (console.log)\n  callback = cleanInputs.cleanCB(callback);\n  options = options || {};\n  return {\n    callback: callback,\n    options: options\n  };\n};\nvar cleanInputs = module.exports = {\n  cleanSingle: function (func, options, callback, lower, upper) {\n    var optional = optionalArgs(options, callback);\n    options = optional.options;\n    callback = optional.callback;\n    func = parse.cleanFunc(func, options.variable, false).func;\n    options.lower = parse.parseNum(lower);\n    options.upper = parse.parseNum(upper);\n    return {\n      func: func,\n      options: options,\n      callback: callback\n    };\n  },\n  cleanMulti: function (func, options, callback, range) {\n    var optional = optionalArgs(options, callback);\n    options = optional.options;\n    callback = optional.callback;\n    f = parse.cleanFunc(func, options.variables, true);\n    options.numArgs = f.numArgs;\n    func = f.func;\n    options.range = parse.parseRange(range);\n    return {\n      func: func,\n      options: options,\n      callback: callback\n    };\n  },\n  cleanCB: function (cb) {\n    return cb || function (results) {\n      console.log(results);\n    };\n  }\n};","map":{"version":3,"names":["parse","require","extendNoOverwrite","obj","defaults","key","undefined","optionalArgs","options","callback","cleanInputs","cleanCB","module","exports","cleanSingle","func","lower","upper","optional","cleanFunc","variable","parseNum","cleanMulti","range","f","variables","numArgs","parseRange","cb","results","console","log"],"sources":["C:/Users/Sagar/Desktop/Sensor/my-app/node_modules/scipy/integrate/node/clean.js"],"sourcesContent":["var parse = require('./parse');\n\nvar extendNoOverwrite = function (obj, defaults){\n  for (key in defaults) {\n    if (obj[key] === undefined) {\n      obj[key] = defaults[key];\n    }\n  }\n}\n\nvar optionalArgs = function (options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n  // provide default callback function (console.log)\n  callback = cleanInputs.cleanCB(callback);\n\n  options = options || {};\n\n  return {\n    callback: callback,\n    options: options\n  };\n};\n\nvar cleanInputs = module.exports = {\n  cleanSingle: function (func, options, callback, lower, upper){\n    var optional = optionalArgs(options, callback);\n    options  = optional.options;\n    callback = optional.callback;\n    func = parse.cleanFunc(func, options.variable, false).func;\n\n    options.lower = parse.parseNum(lower);\n    options.upper = parse.parseNum(upper);\n\n    return {\n      func    : func,\n      options : options,\n      callback: callback\n    };\n  },\n\n  cleanMulti: function (func, options, callback, range){\n    var optional = optionalArgs(options, callback);\n    options  = optional.options;\n    callback = optional.callback;\n    \n    f = parse.cleanFunc(func, options.variables, true);\n    options.numArgs = f.numArgs;\n    func = f.func;\n\n    options.range = parse.parseRange(range);\n\n    return {\n      func    : func,\n      options : options,\n      callback: callback\n    };\n  },\n\n  cleanCB: function(cb) {\n    return cb || function (results){\n      console.log(results);\n    };\n  }\n}\n"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,SAAS,CAAC;AAE9B,IAAIC,iBAAiB,GAAG,SAAAA,CAAUC,GAAG,EAAEC,QAAQ,EAAC;EAC9C,KAAKC,GAAG,IAAID,QAAQ,EAAE;IACpB,IAAID,GAAG,CAACE,GAAG,CAAC,KAAKC,SAAS,EAAE;MAC1BH,GAAG,CAACE,GAAG,CAAC,GAAGD,QAAQ,CAACC,GAAG,CAAC;IAC1B;EACF;AACF,CAAC;AAED,IAAIE,YAAY,GAAG,SAAAA,CAAUC,OAAO,EAAEC,QAAQ,EAAE;EAC9C,IAAI,OAAOD,OAAO,KAAK,UAAU,EAAE;IACjCC,QAAQ,GAAGD,OAAO;IAClBA,OAAO,GAAGF,SAAS;EACrB;EACA;EACAG,QAAQ,GAAGC,WAAW,CAACC,OAAO,CAACF,QAAQ,CAAC;EAExCD,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;EAEvB,OAAO;IACLC,QAAQ,EAAEA,QAAQ;IAClBD,OAAO,EAAEA;EACX,CAAC;AACH,CAAC;AAED,IAAIE,WAAW,GAAGE,MAAM,CAACC,OAAO,GAAG;EACjCC,WAAW,EAAE,SAAAA,CAAUC,IAAI,EAAEP,OAAO,EAAEC,QAAQ,EAAEO,KAAK,EAAEC,KAAK,EAAC;IAC3D,IAAIC,QAAQ,GAAGX,YAAY,CAACC,OAAO,EAAEC,QAAQ,CAAC;IAC9CD,OAAO,GAAIU,QAAQ,CAACV,OAAO;IAC3BC,QAAQ,GAAGS,QAAQ,CAACT,QAAQ;IAC5BM,IAAI,GAAGf,KAAK,CAACmB,SAAS,CAACJ,IAAI,EAAEP,OAAO,CAACY,QAAQ,EAAE,KAAK,CAAC,CAACL,IAAI;IAE1DP,OAAO,CAACQ,KAAK,GAAGhB,KAAK,CAACqB,QAAQ,CAACL,KAAK,CAAC;IACrCR,OAAO,CAACS,KAAK,GAAGjB,KAAK,CAACqB,QAAQ,CAACJ,KAAK,CAAC;IAErC,OAAO;MACLF,IAAI,EAAMA,IAAI;MACdP,OAAO,EAAGA,OAAO;MACjBC,QAAQ,EAAEA;IACZ,CAAC;EACH,CAAC;EAEDa,UAAU,EAAE,SAAAA,CAAUP,IAAI,EAAEP,OAAO,EAAEC,QAAQ,EAAEc,KAAK,EAAC;IACnD,IAAIL,QAAQ,GAAGX,YAAY,CAACC,OAAO,EAAEC,QAAQ,CAAC;IAC9CD,OAAO,GAAIU,QAAQ,CAACV,OAAO;IAC3BC,QAAQ,GAAGS,QAAQ,CAACT,QAAQ;IAE5Be,CAAC,GAAGxB,KAAK,CAACmB,SAAS,CAACJ,IAAI,EAAEP,OAAO,CAACiB,SAAS,EAAE,IAAI,CAAC;IAClDjB,OAAO,CAACkB,OAAO,GAAGF,CAAC,CAACE,OAAO;IAC3BX,IAAI,GAAGS,CAAC,CAACT,IAAI;IAEbP,OAAO,CAACe,KAAK,GAAGvB,KAAK,CAAC2B,UAAU,CAACJ,KAAK,CAAC;IAEvC,OAAO;MACLR,IAAI,EAAMA,IAAI;MACdP,OAAO,EAAGA,OAAO;MACjBC,QAAQ,EAAEA;IACZ,CAAC;EACH,CAAC;EAEDE,OAAO,EAAE,SAAAA,CAASiB,EAAE,EAAE;IACpB,OAAOA,EAAE,IAAI,UAAUC,OAAO,EAAC;MAC7BC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;IACtB,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}