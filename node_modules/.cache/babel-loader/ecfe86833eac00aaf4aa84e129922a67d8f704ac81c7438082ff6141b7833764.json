{"ast":null,"code":"var spawn = require('child_process').spawn;\nvar Transform = require('readable-stream').Transform;\nvar util = require('util');\nvar stringify = require('streaming-json-stringify');\nvar predict = require('./predict-stream');\nvar Fit = function (options) {\n  var self = this;\n  Transform.call(this, {\n    objectMode: true\n  });\n  self._options = options;\n  self._isSpawned = false;\n  self._model = new Buffer('');\n};\nutil.inherits(Fit, Transform);\nFit.prototype.predict = function () {\n  return predict({\n    model: this._model\n  });\n};\nFit.prototype._write = function (obj, _, done) {\n  if (this._pyError) {\n    return done(this._pyError);\n  }\n  var serialize = this._serialize;\n  if (!this._isSpawned) {\n    this._spawn();\n    this._pipifyStdio();\n    this._isSpawned = true;\n    serialize = this._serialize;\n    serialize.write(this._options.params, 'utf-8', function () {\n      serialize.write(obj, 'utf-8', done);\n    });\n  } else {\n    serialize.write(obj, 'utf-8', done);\n  }\n};\nFit.prototype._spawn = function () {\n  var self = this;\n  var args = ['scikit.py', '--module', this._options.module, '--method', this._options.method];\n  self._pyProcess = spawn('python2', args, {\n    cwd: __dirname,\n    stdio: ['pipe', 'pipe', 'pipe']\n  });\n  self._pyProcess.on('error', function (err) {\n    self._pyError = err;\n    self.emit('error', err);\n  });\n  self._pyProcess.on('exit', function (code, signal) {\n    var message;\n    if (code) {\n      var pyerr = self._pyError ? 'Python stderr:\\n' + self._pyError : '';\n      message = 'Python crashed with code ' + code + ' and signal ' + signal + '\\n' + pyerr;\n      self._pyError = new Error(message);\n      self.emit('error', self._pyError);\n    }\n  });\n};\nFit.prototype._pipifyStdio = function () {\n  var self = this;\n  self._pipifyStderr();\n  self._pipifyStdout();\n  self._pipifyStdin();\n\n  //self._pyProcess.stdin.on('error', function (err) {\n  //if (self._pyError.message) {\n  //err.message = self._pyError.message + '\\n' + err.message;\n  //}\n  //self._pyError = err;\n  //});\n  //self._pyProcess.stdout.on('readable', function () {});\n};\n\nFit.prototype._pipifyStdout = function () {\n  var self = this;\n  self._pyProcess.stdout.on('readable', function () {\n    var chunk;\n    while ((chunk = this.read()) !== null) {\n      self._model = Buffer.concat([self._model, chunk]);\n    }\n  }).on('end', function () {\n    self.emit('model', self._model);\n    // Needs for emiting 'end'\n    self.read();\n  });\n};\nFit.prototype._pipifyStdin = function () {\n  var serialize = this._serialize = stringify();\n  serialize.open = '';\n  serialize.seperator = '\\n';\n  serialize.close = '\\n';\n  serialize.pipe(this._pyProcess.stdin);\n  this.once('finish', function onFinish() {\n    serialize.end();\n  });\n};\nFit.prototype._pipifyStderr = function () {\n  var self = this;\n  self._pyProcess.stderr.setEncoding('utf8');\n  self._pyProcess.stderr.on('data', function (data) {\n    if (/^execvp\\(\\)/.test(data)) {\n      self._pyError = new Error(' Failed to run python');\n    } else {\n      self._pyError = self._pyError || new Error();\n      self._pyError.message += data;\n      self.emit('error', self._pyError);\n    }\n  });\n};\nmodule.exports = function (options) {\n  return new Fit(options);\n};","map":{"version":3,"names":["spawn","require","Transform","util","stringify","predict","Fit","options","self","call","objectMode","_options","_isSpawned","_model","Buffer","inherits","prototype","model","_write","obj","_","done","_pyError","serialize","_serialize","_spawn","_pipifyStdio","write","params","args","module","method","_pyProcess","cwd","__dirname","stdio","on","err","emit","code","signal","message","pyerr","Error","_pipifyStderr","_pipifyStdout","_pipifyStdin","stdout","chunk","read","concat","open","seperator","close","pipe","stdin","once","onFinish","end","stderr","setEncoding","data","test","exports"],"sources":["C:/Users/Sagar/Desktop/Sensor/my-app/node_modules/scikit-learn/lib/fit-stream.js"],"sourcesContent":["var spawn     = require('child_process').spawn;\nvar Transform = require('readable-stream').Transform;\nvar util      = require('util');\n\nvar stringify = require('streaming-json-stringify');\n\nvar predict = require('./predict-stream');\n\nvar Fit = function (options) {\n  var self = this;\n  Transform.call(this, { objectMode: true });\n  self._options = options;\n  self._isSpawned = false;\n\n  self._model = new Buffer('');\n};\nutil.inherits(Fit, Transform);\n\nFit.prototype.predict = function() {\n  return predict({ model: this._model });\n};\n\nFit.prototype._write = function (obj, _, done) {\n  if (this._pyError) { return done(this._pyError); }\n  var serialize = this._serialize;\n  if (!this._isSpawned) {\n    this._spawn();\n    this._pipifyStdio();\n    this._isSpawned = true;\n    serialize = this._serialize;\n    serialize.write(this._options.params, 'utf-8', function () {\n      serialize.write(obj, 'utf-8', done);\n    });\n  } else {\n    serialize.write(obj, 'utf-8', done);\n  }\n};\n\nFit.prototype._spawn = function() {\n  var self = this;\n  var args = [\n    'scikit.py',\n    '--module', this._options.module,\n    '--method', this._options.method\n  ];\n  self._pyProcess = spawn('python2', args, {\n    cwd: __dirname,\n    stdio: ['pipe', 'pipe', 'pipe']\n  });\n  self._pyProcess.on('error', function (err) {\n    self._pyError = err;\n    self.emit('error', err);\n  });\n  self._pyProcess.on('exit', function (code, signal) {\n    var message;\n\n    if (code) {\n      var pyerr = self._pyError ? ('Python stderr:\\n' + self._pyError) : '';\n      message = 'Python crashed with code ' + code +\n        ' and signal ' + signal + '\\n' + pyerr;\n      self._pyError = new Error(message);\n      self.emit('error', self._pyError);\n    }\n  });\n};\n\nFit.prototype._pipifyStdio = function() {\n  var self = this;\n\n  self._pipifyStderr();\n  self._pipifyStdout();\n  self._pipifyStdin();\n\n  //self._pyProcess.stdin.on('error', function (err) {\n    //if (self._pyError.message) {\n      //err.message = self._pyError.message + '\\n' + err.message;\n    //}\n    //self._pyError = err;\n  //});\n  //self._pyProcess.stdout.on('readable', function () {});\n};\n\nFit.prototype._pipifyStdout = function() {\n  var self = this;\n  self._pyProcess.stdout\n    .on('readable', function () {\n      var chunk;\n      while ((chunk = this.read()) !== null) {\n        self._model = Buffer.concat([self._model, chunk]);\n      }\n    })\n    .on('end', function () {\n      self.emit('model', self._model);\n      // Needs for emiting 'end'\n      self.read();\n    });\n};\n\nFit.prototype._pipifyStdin = function() {\n  var serialize = this._serialize = stringify();\n  serialize.open      = '';\n  serialize.seperator = '\\n';\n  serialize.close     = '\\n';\n  serialize.pipe(this._pyProcess.stdin);\n  this.once('finish', function onFinish () {\n    serialize.end();\n  });\n};\n\nFit.prototype._pipifyStderr = function() {\n  var self = this;\n  self._pyProcess.stderr.setEncoding('utf8');\n  self._pyProcess.stderr.on('data', function (data) {\n    if (/^execvp\\(\\)/.test(data)) {\n      self._pyError = new Error(' Failed to run python');\n    } else {\n      self._pyError = self._pyError || new Error();\n      self._pyError.message += data;\n      self.emit('error', self._pyError);\n    }\n  });\n};\n\nmodule.exports = function (options) {\n  return new Fit(options);\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}