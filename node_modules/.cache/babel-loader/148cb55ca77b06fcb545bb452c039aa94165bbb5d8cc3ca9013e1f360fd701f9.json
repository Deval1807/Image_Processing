{"ast":null,"code":"var spawn = require('child_process').spawn;\nvar Transform = require('readable-stream').Transform;\nvar Through = require('readable-stream').PassThrough;\nvar util = require('util');\nvar stringify = require('streaming-json-stringify');\nvar JSONStream = require('JSONStream');\nvar Predict = function (options) {\n  var self = this;\n  Transform.call(this, {\n    objectMode: true\n  });\n  self._options = options;\n  self._isSpawned = false;\n};\nutil.inherits(Predict, Transform);\nPredict.prototype._transform = function (obj, _, done) {\n  if (this._pyError) {\n    return done(this._pyError);\n  }\n  var serialize = this._serialize;\n  if (!this._isSpawned) {\n    this._spawn();\n    this._pipifyStdio();\n    this._isSpawned = true;\n    serialize = this._serialize;\n    this._pyProcess.stdin.write(this._options.model, 'utf-8', function () {\n      serialize.write(obj, 'utf-8', done);\n    });\n  } else {\n    serialize.write(obj, 'utf-8', done);\n  }\n};\nPredict.prototype._flush = function (done) {\n  if (this._realyFinished) {\n    done();\n  } else {\n    this.once('realyFinished', function () {\n      done();\n    });\n  }\n};\nPredict.prototype._spawn = function () {\n  var self = this;\n  var args = ['scikit.py', '--predict'];\n  self._pyProcess = spawn('python2', args, {\n    cwd: __dirname,\n    stdio: ['pipe', 'pipe', 'pipe']\n  });\n  self._pyProcess.on('error', function (err) {\n    self._pyError = err;\n    self.emit('error', err);\n  });\n  self._pyProcess.on('exit', function (code, signal) {\n    var message;\n    if (code) {\n      var pyerr = self._pyError ? 'Python stderr:\\n' + self._pyError : '';\n      message = 'Python crashed with code ' + code + ' and signal ' + signal + '\\n' + pyerr;\n      self._pyError = new Error(message);\n      self.emit('error', self._pyError);\n    }\n  });\n};\nPredict.prototype._pipifyStdio = function () {\n  this._pipifyStderr();\n  this._pipifyStdout();\n  this._pipifyStdin();\n};\nPredict.prototype._pipifyStdout = function () {\n  var self = this;\n  self._pyProcess.stdout.pipe(JSONStream.parse('*'))\n  // For compatibility with stream2\n  .pipe(new Through({\n    objectMode: true\n  })).on('readable', function () {\n    var label;\n    while ((label = this.read()) !== null) {\n      self.push(label);\n    }\n  }).on('end', function () {\n    self._realyFinished = true;\n    self.emit('realyFinished');\n  });\n};\nPredict.prototype._pipifyStdin = function () {\n  var serialize = this._serialize = stringify();\n  serialize.open = '\\n\\n';\n  serialize.seperator = '\\n';\n  serialize.close = '\\n';\n  serialize.pipe(this._pyProcess.stdin);\n  this.on('finish', function () {\n    serialize.end();\n  });\n};\nPredict.prototype._pipifyStderr = function () {\n  var self = this;\n  self._pyProcess.stderr.setEncoding('utf8');\n  self._pyProcess.stderr.on('data', function (data) {\n    if (/^execvp\\(\\)/.test(data)) {\n      self._pyError = new Error(' Failed to run python');\n    } else {\n      self._pyError = self._pyError || new Error();\n      self._pyError.message += data;\n      self.emit('error', self._pyError);\n    }\n  });\n};\nmodule.exports = function (options) {\n  return new Predict(options);\n};","map":{"version":3,"names":["spawn","require","Transform","Through","PassThrough","util","stringify","JSONStream","Predict","options","self","call","objectMode","_options","_isSpawned","inherits","prototype","_transform","obj","_","done","_pyError","serialize","_serialize","_spawn","_pipifyStdio","_pyProcess","stdin","write","model","_flush","_realyFinished","once","args","cwd","__dirname","stdio","on","err","emit","code","signal","message","pyerr","Error","_pipifyStderr","_pipifyStdout","_pipifyStdin","stdout","pipe","parse","label","read","push","open","seperator","close","end","stderr","setEncoding","data","test","module","exports"],"sources":["C:/Users/Sagar/Desktop/Sensor/my-app/node_modules/scikit-learn/lib/predict-stream.js"],"sourcesContent":["var spawn     = require('child_process').spawn;\nvar Transform = require('readable-stream').Transform;\nvar Through   = require('readable-stream').PassThrough;\nvar util      = require('util');\n\nvar stringify = require('streaming-json-stringify');\nvar JSONStream = require('JSONStream');\n\nvar Predict = function (options) {\n  var self = this;\n  Transform.call(this, { objectMode: true });\n  self._options = options;\n  self._isSpawned = false;\n};\nutil.inherits(Predict, Transform);\n\nPredict.prototype._transform = function (obj, _, done) {\n  if (this._pyError) { return done(this._pyError); }\n  var serialize = this._serialize;\n  if (!this._isSpawned) {\n    this._spawn();\n    this._pipifyStdio();\n    this._isSpawned = true;\n    serialize = this._serialize;\n    this._pyProcess.stdin.write(this._options.model, 'utf-8', function () {\n      serialize.write(obj, 'utf-8', done);\n    });\n  } else {\n    serialize.write(obj, 'utf-8', done);\n  }\n};\n\nPredict.prototype._flush = function(done) {\n  if (this._realyFinished) {\n    done();\n  } else {\n    this.once('realyFinished', function () {\n      done();\n    });\n  }\n};\n\nPredict.prototype._spawn = function() {\n  var self = this;\n  var args = [\n    'scikit.py', '--predict'\n  ];\n  self._pyProcess = spawn('python2', args, {\n    cwd: __dirname,\n    stdio: ['pipe', 'pipe', 'pipe']\n  });\n  self._pyProcess.on('error', function (err) {\n    self._pyError = err;\n    self.emit('error', err);\n  });\n  self._pyProcess.on('exit', function (code, signal) {\n    var message;\n\n    if (code) {\n      var pyerr = self._pyError ? ('Python stderr:\\n' + self._pyError) : '';\n      message = 'Python crashed with code ' + code +\n        ' and signal ' + signal + '\\n' + pyerr;\n      self._pyError = new Error(message);\n      self.emit('error', self._pyError);\n    }\n  });\n};\n\nPredict.prototype._pipifyStdio = function() {\n  this._pipifyStderr();\n  this._pipifyStdout();\n  this._pipifyStdin();\n};\n\nPredict.prototype._pipifyStdout = function() {\n  var self = this;\n  self._pyProcess.stdout\n    .pipe(JSONStream.parse('*'))\n    // For compatibility with stream2\n    .pipe(new Through({ objectMode: true }))\n    .on('readable', function () {\n      var label;\n      while ((label = this.read()) !== null) {\n        self.push(label);\n      }\n    })\n    .on('end', function () {\n      self._realyFinished = true;\n      self.emit('realyFinished');\n    });\n};\n\nPredict.prototype._pipifyStdin = function() {\n  var serialize = this._serialize = stringify();\n  serialize.open      = '\\n\\n';\n  serialize.seperator = '\\n';\n  serialize.close     = '\\n';\n  serialize.pipe(this._pyProcess.stdin);\n  this.on('finish', function () {\n    serialize.end();\n  });\n};\n\nPredict.prototype._pipifyStderr = function() {\n  var self = this;\n  self._pyProcess.stderr.setEncoding('utf8');\n  self._pyProcess.stderr.on('data', function (data) {\n    if (/^execvp\\(\\)/.test(data)) {\n      self._pyError = new Error(' Failed to run python');\n    } else {\n      self._pyError = self._pyError || new Error();\n      self._pyError.message += data;\n      self.emit('error', self._pyError);\n    }\n  });\n};\n\nmodule.exports = function (options) {\n  return new Predict(options);\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}