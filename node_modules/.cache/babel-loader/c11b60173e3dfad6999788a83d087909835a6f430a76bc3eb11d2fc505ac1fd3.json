{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sagar\\\\Desktop\\\\Sensor\\\\my-app\\\\src\\\\components\\\\home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport DropdownMenu from \"./dropdownMenu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [options, setOptions] = useState([]);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const fetchURL = `${process.env.REACT_APP_BACKEND_API}/getImages`;\n  useEffect(() => {\n    const fetchOptions = async () => {\n      try {\n        const response = await fetch(fetchURL);\n        if (response.ok) {\n          const data = await response.json();\n          setOptions(data);\n        } else {\n          console.error(\"Failed to fetch options:\", response.statusText);\n        }\n      } catch (error) {\n        console.error(\"Error fetching options:\", error);\n      }\n    };\n    fetchOptions();\n  }, []);\n  const handleSelect = option => {\n    setSelectedOption(option);\n  };\n  const handleSubmit = () => {\n    // Perform action with the selected option\n    console.log(\"Submitted:\", selectedOption);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Select Design:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n      options: options,\n      onSelect: handleSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), selectedOption && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Selected Option: \", selectedOption.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: selectedOption.image,\n        alt: selectedOption.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Compare\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/addnew\",\n          children: \"Addnew\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), \"to add a new design.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"S7Rwh/Z3l33+pV8pOmGom4ung00=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","NavLink","DropdownMenu","jsxDEV","_jsxDEV","Home","_s","options","setOptions","selectedOption","setSelectedOption","fetchURL","process","env","REACT_APP_BACKEND_API","fetchOptions","response","fetch","ok","data","json","console","error","statusText","handleSelect","option","handleSubmit","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelect","name","src","image","alt","label","onClick","href","to","_c","$RefreshReg$"],"sources":["C:/Users/Sagar/Desktop/Sensor/my-app/src/components/home.js"],"sourcesContent":["import React, { useState, useEffect} from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport DropdownMenu from \"./dropdownMenu\";\r\n\r\nconst Home = () => {\r\n  const [options, setOptions] = useState([]);\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n  const fetchURL = `${process.env.REACT_APP_BACKEND_API}/getImages`;\r\n\r\n  useEffect(() => {\r\n    const fetchOptions = async () => {\r\n      try {\r\n        const response = await fetch(fetchURL);\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setOptions(data);\r\n        } else {\r\n          console.error(\"Failed to fetch options:\", response.statusText);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching options:\", error);\r\n      }\r\n    };\r\n\r\n    fetchOptions();\r\n  }, []);\r\n\r\n  const handleSelect = (option) => {\r\n    setSelectedOption(option);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    // Perform action with the selected option\r\n    console.log(\"Submitted:\", selectedOption);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Select Design:</h1>\r\n      <DropdownMenu options={options} onSelect={handleSelect} />\r\n      {selectedOption && (\r\n        <div>\r\n          <p>Selected Option: {selectedOption.name}</p>\r\n          <img src={selectedOption.image} alt={selectedOption.label} />\r\n          <button onClick={handleSubmit}>Compare</button>\r\n        </div>\r\n      )}\r\n      <p>\r\n        <a href=\"#\">\r\n          <NavLink to=\"/addnew\">Addnew</NavLink>\r\n        </a>\r\n        to add a new design.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AACjD,SAASC,OAAO,QAAQ,kBAAkB;AAC1C,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAMY,QAAQ,GAAI,GAAEC,OAAO,CAACC,GAAG,CAACC,qBAAsB,YAAW;EAEjEd,SAAS,CAAC,MAAM;IACd,MAAMe,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACN,QAAQ,CAAC;QACtC,IAAIK,QAAQ,CAACE,EAAE,EAAE;UACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;UAClCZ,UAAU,CAACW,IAAI,CAAC;QAClB,CAAC,MAAM;UACLE,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEN,QAAQ,CAACO,UAAU,CAAC;QAChE;MACF,CAAC,CAAC,OAAOD,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IAEDP,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,YAAY,GAAIC,MAAM,IAAK;IAC/Bf,iBAAiB,CAACe,MAAM,CAAC;EAC3B,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB;IACAL,OAAO,CAACM,GAAG,CAAC,YAAY,EAAElB,cAAc,CAAC;EAC3C,CAAC;EAED,oBACEL,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAAwB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvB5B,OAAA,CAACF,YAAY;MAACK,OAAO,EAAEA,OAAQ;MAAC0B,QAAQ,EAAET;IAAa;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACzDvB,cAAc,iBACbL,OAAA;MAAAwB,QAAA,gBACExB,OAAA;QAAAwB,QAAA,GAAG,mBAAiB,EAACnB,cAAc,CAACyB,IAAI;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7C5B,OAAA;QAAK+B,GAAG,EAAE1B,cAAc,CAAC2B,KAAM;QAACC,GAAG,EAAE5B,cAAc,CAAC6B;MAAM;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7D5B,OAAA;QAAQmC,OAAO,EAAEb,YAAa;QAAAE,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CACN,eACD5B,OAAA;MAAAwB,QAAA,gBACExB,OAAA;QAAGoC,IAAI,EAAC,GAAG;QAAAZ,QAAA,eACTxB,OAAA,CAACH,OAAO;UAACwC,EAAE,EAAC,SAAS;UAAAb,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,wBAEN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAnDID,IAAI;AAAAqC,EAAA,GAAJrC,IAAI;AAqDV,eAAeA,IAAI;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}